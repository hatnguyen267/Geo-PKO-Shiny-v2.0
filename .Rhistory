trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", ")) %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID)
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything, as.character)) %>%
pivot_longer(everything, names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", ")) %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> test1
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything, as.character))
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
)
runApp()
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything, as.character)) %>%
pivot_longer(everything, names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", ")) %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> test1
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(everything(), names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", ")) %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> test1
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(everything(), names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1)
runApp()
geopko %>% tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", ")) %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> test1
View(test1)
geopko %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(binary != 1) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = "Data on troop types not available for this location") %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> details2
View(details2)
runApp()
geopko %>% filter(mission=="MINUSMA") %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(binary != 1) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = "Data on troop types not available for this location") %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> details2
View(details2)
geopko %>% filter(mission=="MINUSMA") %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", ")) %>%
ungroup() %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> test1
View(test1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(details2)
View(test1)
View(details2)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
geopko %>% group_by(source) %>% filter(no.troops>0, no.tcc==0) %>% distinct(mission, source)
geopko %>% group_by(source) %>% filter(no.troops>0, no.tcc==0) %>% distinct(mission, source) -> debug1
View(debug1)
geopko %>% group_by(source) %>% filter(no.troops>0, no.tcc==0) %>% distinct(mission, source, month, year) -> debug1
geopko %>% group_by(source) %>% filter(max(no.troops)>0, max(no.tcc)==0) %>% distinct(mission, source, month, year) -> debug1
runApp()
runApp()
runApp()
runApp()
runApp()
geopko %>% filter(mission=="MINUSMA", year=="2019", month=="7")
geopko %>% filter(mission=="MINUSMA", year=="2019", month=="7") -> debug2
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(binary == 1) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", "),
.groups = 'drop') %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> details1
View(debug2)
debug2 %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(!(troop.type %in% "0"))
debug2 %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no, troop.type
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(!(troop.type %in% "0"))
debug2 %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no, troop.type
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(!(troop.type %in% "0")) %>%
mutate(trooptypes = case_when(
trooptypes == "sf" ~ "Special Forces",
trooptypes == "inf" ~ "Infantry",
trooptypes == "he.sup" ~ "Helicopter Support",
trooptypes == "avia" ~ "Aviation",
trooptypes == "mp" ~ "Military Police",
trooptypes == "uav" ~ "Unmanned Aerial Vehicles",
trooptypes == "recon" ~ "Reconnaissance",
trooptypes == "maint" ~ "Maintenance",
trooptypes == "med" ~ "Medical",
trooptypes == "eng" ~ "Engineer",
trooptypes == "fpu" ~ "Formed Police Unit",
trooptypes == "fp" ~ "Force Protection",
trooptypes == "riv" ~ "Riverine",
trooptypes == "sig" ~ "Signal",
trooptypes == "trans" ~ "Transport",
trooptypes == "other.type" ~ "Others",
trooptypes == "eng" ~ "Engineer",
trooptypes == "rpf" ~ "Regional Protection Force",
trooptypes == "demining" ~ "Demining",
TRUE ~ as.character(trooptypes)
)) %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = str_c(trooptypes, collapse = ", "),
.groups = 'drop') %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> details1
View(details1)
debug2 %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(troop.type %in% "0") %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = "Data on troop types not available for this location",
.groups = 'drop') %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> details2
debug2 %>%
tibble::rowid_to_column("ID") %>%
select(
ID, location, no.troops, no.tcc, rpf:uav, other.type, -rpf.no,
-inf.no, -fpu.no, -res.no, -fp.no, troop.type
) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(5:23, names_to = "trooptypes", values_to = "binary") %>%
filter(troop.type %in% "0") %>%
group_by(ID, location, no.troops, no.tcc) %>%
summarize(Troop.Compo = "Data on troop types not available for this location",
.groups = 'drop') %>%
mutate(
no.tcc = ifelse(is.na(no.tcc), "Unknown", no.tcc),
no.troops = ifelse(is.na(no.troops), "Unknown", no.troops)
) %>%
select(-ID) -> details2
View(details2)
View(details1)
runApp()
runApp()
library(shiny)
runApp()
rrunApp()
runApp()
View(debug2)
library(dplyr)
debugs2 %>% pull(no.tcc) -> debug3
debug2 %>% pull(no.tcc) -> debug3
levels(debug3)
level(as.factor(debug3))
levels(as.factor(debug3))
length(levels(as.factor(debug3)))
shiny::runApp()
runApp()
runApp()
geopko %>% filter(mission="ONUB") -> debug4
geopko %>% filter(mission=="ONUB") -> debug4
View(debug4)
geopko %>% filter(mission=="ONUB", source == "Map no. 4216") -> debug4
length(unique(debug4$no.tcc))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(dplyr)
geopko %>% group_by(mission, timepoint) %>% filter(length(unique(no.troops))==1) %>% distinct(mission, timepoint)
geopko %>% group_by(mission, timepoint) %>% filter(length(unique(no.troops))==1) -> debug5
View(debug5)
geopko %>% group_by(mission, timepoint) %>% filter(length(unique(no.troops))==1 &) -> debug5
geopko %>% group_by(mission, timepoint) %>% filter(length(unique(no.troops))==1 & length(unique(no.tcc))>1) -> debug5
geopko %>% group_by(mission, timepoint) %>% filter(length(unique(no.troops))>1 & length(unique(no.tcc))==1) -> debug5
shiny::runApp()
runApp()
View(TTmapData)
View(TCCmapData)
library(dplyr)
library(readxl)
TCCmapData <- readxl::read_xlsx("data/TCCMap.xlsx", col_types = "text")
TCCmapData %>% mutate_at(vars(longitude, latitude, No.TCC), as.numeric) %>%
mutate(No.TCC.2 = case_when("NA" %in% year.overview ~ No.TCC - 1,
TRUE ~ as.character(No.TCC)))
TCCmapData %>% mutate_at(vars(longitude, latitude, No.TCC), as.double) %>%
mutate(No.TCC.2 = case_when("NA" %in% year.overview ~ No.TCC - 1,
TRUE ~ as.character(No.TCC)))
TCCmapData %>% mutate_at(vars(longitude, latitude, No.TCC), as.double) %>%
mutate(No.TCC.2 = case_when("NA" %in% year.overview ~ No.TCC - 1,
TRUE ~ as.double(No.TCC)))
TCCmapData %>% mutate_at(vars(longitude, latitude, No.TCC), as.double) %>%
mutate(No.TCC.2 = case_when(year.overview %in% "NA" ~ No.TCC - 1,
TRUE ~ as.double(No.TCC)))
TCCmapData %>% mutate_at(vars(longitude, latitude, No.TCC), as.double) %>%
mutate(No.TCC.2 = case_when("NA" %in% year.overview ~ No.TCC - 1,
TRUE ~ as.double(No.TCC)))
TCCmapData %>% mutate_at(vars(longitude, latitude, No.TCC), as.double) %>%
mutate(No.TCC.2 = case_when("NA" %in% year.overview ~ No.TCC - 1,
TRUE ~ as.double(No.TCC)))
TCCmapData <- readxl::read_xlsx("data/TCCMap.xlsx", col_types = "text")
TCCmapData %>% mutate_at(vars(longitude, latitude, No.TCC), as.double) %>%
mutate(No.TCC.2 = case_when("NA" %in% year.overview ~ No.TCC - 1,
TRUE ~ as.double(No.TCC)))
TCCmapData %>% mutate_at(vars(longitude, latitude, No.TCC), as.numeric) %>%
mutate(No.TCC.2 = case_when("NA" %in% year.overview ~ No.TCC - 1,
TRUE ~ as.double(No.TCC)))
TCCmapData %>% mutate_at(vars(longitude, latitude, No.TCC), as.numeric(as.character)) %>%
mutate(No.TCC.2 = case_when("NA" %in% year.overview ~ No.TCC - 1,
TRUE ~ as.double(No.TCC)))
TCCmapData %>% mutate(No.TCC = as.numeric(No.TCC)) %>%
mutate(No.TCC.2 = case_when("NA" %in% year.overview ~ No.TCC - 1,
TRUE ~ as.double(No.TCC)))
library(stringr)
TCCmapData %>% mutate(No.TCC = as.numeric(No.TCC)) %>%
mutate(No.TCC.2 = case_when(str_detect(year.overview, "NA") ~ No.TCC - 1,
TRUE ~ as.double(No.TCC)))
TCCmapData %>% mutate(No.TCC = as.numeric(No.TCC)) %>%
mutate(No.TCC.2 = case_when(str_detect(year.overview, "NA") ~ No.TCC - 1,
TRUE ~ as.double(No.TCC))) -> debug
View(debug)
shiny::runApp()
runApp()
runApp()
runApp()
